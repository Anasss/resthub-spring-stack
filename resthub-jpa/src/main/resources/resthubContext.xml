<beans profile="resthub-jpa" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config />
    <context:component-scan base-package="org.resthub.jpa" />

    <context:property-placeholder location="classpath*:database.properties" properties-ref="databaseProperties"
        ignore-resource-not-found="true" ignore-unresolvable="true" />

    <util:properties id="databaseProperties">

        <!-- Resthub specific defaults -->
        <prop key="dataSource.dataSourceClassName">org.h2.jdbcx.JdbcDataSource</prop>
        <prop key="dataSource.connectionTestQuery">/* ping*/ SELECT 1</prop>
        <prop key="dataSource.maximumPoolSize">12</prop>
        <prop key="dataSource.minimumPoolSize">6</prop>
        <prop key="dataSource.poolName">ResthubDBPool</prop>
        <prop key="dataSource.registerMbeans">false</prop>
        <prop key="dataSource.url">jdbc:h2:mem:resthub</prop>
        <prop key="dataSource.username">sa</prop>
        <prop key="dataSource.password"></prop>


        <!-- repeat Hikari defaults -->
        <prop key="dataSource.acquireIncrement">1</prop>
        <prop key="dataSource.acquireRetries">3</prop>
        <prop key="dataSource.acquireRetryDelay">750</prop>
        <prop key="dataSource.autoCommit">true</prop>
        <prop key="dataSource.connectionInitSql"></prop>
        <prop key="dataSource.connectionTimeout">5000</prop>
        <prop key="dataSource.idleTimeout">600000</prop>
        <prop key="dataSource.initializationFailFast">false</prop>
        <prop key="dataSource.jdbc4ConnectionTest">true</prop>
        <prop key="dataSource.leakDetectionThreshold">0</prop>
        <prop key="dataSource.maxLifetime">1800000</prop>
        <prop key="dataSource.transactionIsolation">TRANSACTION_READ_COMMITTED</prop>

        <prop key="hibernate.show_sql">false</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
        <prop key="hibernate.id.new_generator_mappings">true</prop>

        <prop key="persistenceUnit.packagesToScan"></prop>
    </util:properties>

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="dataSourceClassName" value="${dataSource.dataSourceClassName}" />
        <property name="connectionTestQuery" value="${dataSource.connectionTestQuery}" />
        <property name="acquireIncrement" value="${dataSource.acquireIncrement}" />
        <property name="acquireRetries" value="${dataSource.acquireRetries}" />
        <property name="acquireRetryDelay" value="${dataSource.acquireRetryDelay}" />
        <property name="autoCommit" value="${dataSource.autoCommit}" />
        <property name="connectionInitSql" value="${dataSource.connectionInitSql}" />
        <property name="connectionTimeout" value="${dataSource.connectionTimeout}" />
        <property name="idleTimeout" value="${dataSource.idleTimeout}" />
        <property name="initializationFailFast" value="${dataSource.initializationFailFast}" />
        <property name="jdbc4ConnectionTest" value="${dataSource.jdbc4ConnectionTest}" />
        <property name="leakDetectionThreshold" value="${dataSource.leakDetectionThreshold}" />
        <property name="maxLifetime" value="${dataSource.maxLifetime}" />
        <property name="maximumPoolSize" value="${dataSource.maximumPoolSize}" />
        <property name="minimumPoolSize" value="${dataSource.minimumPoolSize}" />
        <property name="poolName" value="${dataSource.poolName}" />
        <property name="registerMbeans" value="${dataSource.registerMbeans}" />
        <property name="transactionIsolation" value="${dataSource.transactionIsolation}" />
        <property name="dataSourceProperties" ref="dataSourceProperties" />
    </bean>

    <util:properties id="dataSourceProperties">
        <prop key="user">${dataSource.username}</prop>
        <prop key="password">${dataSource.password}</prop>
        <prop key="url">${dataSource.url}</prop>
    </util:properties>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <constructor-arg ref="hikariConfig" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="${persistenceUnit.packagesToScan}" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${hibernate.show_sql}" />
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <property name="jpaProperties" ref="jpaProperties" />
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
        </property>
    </bean>

    <util:map id="resthubCoreJpaProperties">
        <entry key="hibernate.dialect" value="${hibernate.dialect}" />
        <entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
        <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
        <entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}" />
        <entry key="hibernate.cache.provider_class" value="${hibernate.cache.provider_class}" />
        <entry key="hibernate.id.new_generator_mappings" value="${hibernate.id.new_generator_mappings}" />
    </util:map>

    <bean id="jpaProperties" parent="resthubCoreJpaProperties">
        <property name="sourceMap">
            <map merge="true" />
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven />

</beans>
